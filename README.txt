AVRAM Marius 324CB 

Tema 3 PA - Segmentare Imagini

Pentru reprezentarea grafului am ales sa folosesc o matrice identica cu continutul fisierului. Am gasit aceasta alternativa mult mai economica din punct de vedere al spatiului.  De asemenea aceasta respecta cu fidelitate structura fisierului de timp PGM si permite mult mai usor scrierea in fisierul de iesire. Cu toate acestea, desi am economisit spatiu, timpul de calcul a crescut pentru ca la fiecare pas trebuie calculati vecinii. Fiecare nod in parte are o valoare (cuprinsa intre 0 255) si valori pentru capacitatiile muchiilor care duc catre nodurile vecine. Le-am denumit in mod sugestiv: left, right, up, down. Pentru a retine capacitile dintre sursa si fiecare nod am folosit o noua matrice. Fiecarei pozitii din matricea ce contine capacitatiile de la sursa care un nod, ii corespunze nodul cu aceeasi pozitie din matrix (matricea ce repezinta graful). In mod similar au reprezentate si capacitatiile dintre drena si noduri, existand aceeasi analogie si in cazul lor. 

Initial am calculat capacitiatiile dintre nodurile adiacente dupa formula data in enunt, tinand seama de proportionalitatea functiei f_ij fata de parametrul lambda citit din fisier. In calculul capacitatiilor pentru fiecare nod am calculat diferenta doar in raport cu vecinul drept si cel de jos. Iar in cazul in care se indeplinea conditia se acutalizau capacitatile in mod reciproc, pentru a nu efectua ulterior operatii redundante. Insa la sfarsit ultima linie si coloana din matricea ce reprezinta graful exista muchii cu costuri necalculate. De aceea sunt tratate separat. Calculele capacitatilor sunt realizate in O(m*n+n+m)= O(m*n). Capacitatile dintre sursa si noduri/ drena si noduri sunt completate pur si simplu completand matricile care le contin. Din nou capacitatile sunt calculate in O(n^2). 

Avand astfel graful construit se aplica algoritmul Edmonds-Karp. Acesta a fost putin modificat in sensul ca intr-o stare incipienta se cauta doar caile de forma: sursa -> nod -> drena. Acestea exista aproape intotdeauna, iar daca exista se satureaza. Avantajul utilizarii acestei metode consta in faptul ca nu trebuie umpluta coada cu toate nodurile vecine nodului sursa (care practic sunt toate nodurile din graf) pentru a afla ulterior ca unul din ele are direct acces catre drena. Astfel se evita inutil un ciclu O(n*m) de introducere a nodurilor vecine sursei in coada (coada folosita in cautarea de tip Breath-First). Dupa aceasta faza se aplica in mod normal Edmonds-Karp insa acum sursa nu va mai avea acces la toate nodurile din graf din cauza ca unele muchii au fost saturate complet si astfel coada este mica de n*m. In Bfs nu am mai inversat calea avand in vedere ca muchiile sunt neorientate si in plus cand se afla calea se determina in acealasi pas capacitatea minima. Complexitatea algoritmului Edmonds-Karp este O(V*E^2) unde V = m*n (m- width, n- height) si E ~= m*n*4.

Cat timp se gasesc caii de la sursa catre drena se satureaza caile respective. Cand nu se mai gasesc se aplica algoritmul taierura minima. Se porneste un BFS din sursa, iar nodurile accesibile sunt marcate. In cele din urma nodurile marcate sunt din background iar celalalte sunt din foreground. Se determina acest lucrur printr-o simpla iteratie pe matrice O(n*m).